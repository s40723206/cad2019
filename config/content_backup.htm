<h1>week</h1>
<p><a href="https://s40723206.github.io/cad2019/content/week2-5.html">week2-5</a></p>
<p><a href="https://s40723206.github.io/cad2019/content/week6-9.html">week6-9</a></p>
<p><a href="https://s40723206.github.io/cad2019/content/week10-14.html">week10-14</a></p>
<p><a href="https://s40723206.github.io/cad2019/content/week15-18.html">week15-18</a></p>
<h2>week2-5</h2>
<h4><em>week2</em></h4>
<p><em></em><strong>創建github倉儲、設定新版可攜式套件</strong></p>
<p>1.創建課程倉儲並git clone到近端。</p>
<p>2.用git config 設定name、email及proxy。</p>
<p>3.用新指令 git submodule add 載下模組。</p>
<p>4.輸入 python -m pip install flask cors 指令裝 pip 套件。</p>
<p><span>5.練習開啟近端及遠端並更改網頁名稱。</span></p>
<p><span></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/y2TQRMlc2i0" width="560"></iframe></span></p>
<p><em></em></p>
<h4><em>week3</em></h4>
<p><b>Solvespace 編譯</b></p>
<p>1.先將<span>Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe。</span></p>
<p>2.在小黑框輸入 git version 檢查版本，版本必須在2.13以上。</p>
<p>3.再輸入<span> git clone </span><span>--recurse-submodules 來取得子模組。</span></p>
<p><span>4.將CMakeLists文字檔內的713跟714行前面打上"#"字號。</span></p>
<p>5.將<span> libpng.dll.a 檔名更改為 libpng_static.a。</span></p>
<p><span>6.到build子目錄執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release然後再執行mingw32-make。</span></p>
<p><span>7.回到 solvespace 原始碼目錄,建立 build 目錄後進入 build 目錄。</span></p>
<p><span>8.再執行一次cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/><span>接著執行mingw32-make。</span></span></p>
<p><span><span></span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/i0uU9Pv4N-A" width="560"></iframe></p>
<p></p>
<h4><em>week4</em></h4>
<p>完成前兩周的進度，並練習solvespace繪圖。</p>
<h4><em>week5</em></h4>
<p><em></em><strong>solvespace製圖</strong></p>
<p>這周老師要我們操作solvespace來做task1裡11個圖，每組分配給組員一人做一個部分，而我做的是第9部分的齒輪，下面是我的操作影片。</p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gvnO05VLaiI" width="560"></iframe></p>
<h2>week6-9</h2>
<h4><em>week6</em></h4>
<p><strong>一、 V-rep 模型控制</strong></p>
<p>1.先到task1下載V-rep 3.6.1 rev 4.7z  和 web_vrep2.zip 至隨身碟。</p>
<p>2.點開載好的 <span>V-rep3 </span> 進到 vrep_pro_edu 檔案夾並按下 vrep.exe。</p>
<p>3.開啟後將 <span>web_vrep2 裡的 two_wheeler.ttt 拖進去</span><span>。</span></p>
<p><span>4.執行 web_vrep2 裡的 app.py。</span></p>
<p>5.輸入 <span><span>localhost:5000  開啟遙控器就可以執行操作了。</span></span></p>
<p><span><span> </span></span></p>
<p><span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Q-fxuxaKo5I" width="560"></iframe></span></span></p>
<p><strong></strong></p>
<p><strong>二、參數化零組件繪製</strong></p>
<p>1.繪製車身，畫一個凹形然後長出。</p>
<p>2.以兩側平面其中一面做為工作面，並繪製矩形來切割。</p>
<p>3.再畫一個小圓並做切割。</p>
<p style="text-align: left;">4.<span>以底面做為工作面，並長出一個圓柱，在長出的圓柱面上做迴轉長出一個半圓，來繪製後轉輪。</span></p>
<p style="text-align: left;"><span>5.存檔並再開啟新檔來繪製車輪。</span></p>
<p style="text-align: left;"><span>6.繪製完車輪再存檔，然後開始組裝。</span></p>
<p style="text-align: left;"><span> </span></p>
<p style="text-align: left;"><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KYYWy1LLZMk" width="560"></iframe></span></p>
<p style="text-align: justify;"><strong>↓↓↓ 成品圖 ↓↓↓</strong></p>
<p><img alt="" height="303" src="/images/solvespace_2019-11-01_01-23-05.png" width="564"/></p>
<p><strong></strong></p>
<p><strong>三、新增開始停止紐</strong></p>
<p>1.進到課程網站的倉儲裡的issue尋找#14。</p>
<p>2.開起隨身系統，並進入web_vrep2裡開啟<span>templates</span><span>中的</span><span>controls.html</span>。</p>
<p>3.更改紅色空格處&lt;td&gt;&lt;a class="pure-button pure-button-primary" href="/do/  "<span style="color: #ff0000;">_____</span>"&gt;<span style="color: #ff0000;">_____</span>&lt;/a&gt;&lt;/td&gt;分別加入start和stop的按鈕。</p>
<p style="text-align: left;">4.<span>用小白框開啟</span><span>vrep_linefollower，並</span><span>定義start和stop按鈕</span><span>。</span></p>
<p style="text-align: left;"><span> if direction == '<span style="color: #ff0000;">start</span>':<br/> vrep.simxStartSimulation(self.clientID, vrep.simx_opmode_oneshot)<br/> <span style="color: #ff0000;">el</span>if direction == '<span style="color: #ff0000;">stop</span>':<br/> vrep.simxStopSimulation(self.clientID, vrep.simx_opmode_oneshot)</span></p>
<p style="text-align: left;"><span>5.最後要記得補上else然後對齊好。</span></p>
<p style="text-align: left;"><span>6.執行 web_vrep2 裡的 app.py來開啟 <span><span>localhost:5000 後就可以操作了</span></span>。</span></p>
<p style="text-align: left;"><span></span></p>
<p style="text-align: left;"><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8ArNx1b6ZpU" width="560"></iframe></span></p>
<h4><em></em></h4>
<h4><em>week7</em></h4>
<p style="text-align: left;"><span></span></p><h2>week10-14</h2>
<h2>week15-18</h2>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>